broker.id=0

listeners=PLAINTEXT://10.3.48.54:9092,SASL_PLAINTEXT://10.3.48.54:9093
advertised.listeners=PLAINTEXT://10.3.48.54:9092,SASL_PLAINTEXT://10.3.48.54:9093

# Auth section #
security.inter.broker.protocol=SASL_PLAINTEXT
sasl.mechanism.inter.broker.protocol=SCRAM-SHA-256
sasl.enabled.mechanisms=SCRAM-SHA-256
authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer
allow.everyone.if.no.acl.found=false
# End of Auth section #

zookeeper.set.acl=false
num.network.threads=3
num.io.threads= 8
socket.send.buffer.bytes=1048576
socket.receive.buffer.bytes=1048576
socket.request.max.bytes=104857600
inter.broker.protocol.version=2.7
log.message.format.version=2.7
log.dirs=/data/kafka-data
num.partitions=1
num.recovery.threads.per.data.dir=1
offsets.topic.replication.factor=3
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1
delete.topic.enable=True
auto.create.topics.enable=False
log.retention.hours=5
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000
offsets.retention.minutes=43200
zookeeper.connect=10.3.48.54:2181,10.3.48.56:2181,10.3.48.82:2181
zookeeper.connection.timeout.ms=60000
zookeeper.session.timeout.ms=36000
group.initial.rebalance.delay.ms=0
replica.lag.time.max.ms=30000
default.replication.factor=2
#quota.producer.default=52428800
#quota.consumer.default=52428800
num.replica.fetchers=32
replica.fetch.min.bytes=512
replica.socket.receive.buffer.bytes=1048576
